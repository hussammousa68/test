#!/usr/bin/env python3.7
import io
import tarfile
import platform
import requests
import sys


def download_and_extract(url):
    resp = requests.get(url)
    print('extracting...')
    file = tarfile.open(fileobj=io.BytesIO(resp.content), mode='r:gz')
    file.extractall(path='bin/')


def get_os():
    os_ = platform.platform()
    if os_ == "Darwin":
        return "mac"
    elif os_ == "Windows":
        return "windows"
    return "linux"


def get_arch():
    return '64bit' if sys.maxsize > 2**32 else '32bit'


def fetch_configlet():
    latest = "https://api.github.com/repos/exercism/configlet/releases/latest"
    resp = requests.get(latest)
    data = resp.json()
    version = data["tag_name"]
    machine_info = f"{get_os()}-{get_arch()}"
    name = f"configlet-{machine_info}.tgz"
    for asset in data["assets"]:
        if asset["name"] == name:
            print(f"Downloading configlet {version} for {machine_info}")
            download_and_extract(asset["browser_download_url"])
            return 0
    return 1


def main():
    max_retries = 5
    for i in range(max_retries):
        ret = fetch_configlet()
        if ret == 0:
            break
    return ret


if __name__ == "__main__":
    sys.exit(main())
